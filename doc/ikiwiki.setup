#!/usr/bin/perl
# Configuration file for ikiwiki.
# Passing this to ikiwiki --setup will make ikiwiki generate wrappers and
# build the wiki.
#
# Remember to re-run ikiwiki --setup any time you edit this file.

use IkiWiki::Setup::Standard {
	wikiname => "cwidget",
	#adminuser => ["yourname", ],
	adminemail => 'dburrows@debian.org',

	# Be sure to customise these..
	srcdir => "./ikiwiki",
	destdir => "./html",

	#url => "http://example.org/wiki",
	#cgiurl => "http://example.org/ikiwiki.cgi",
	#templatedir => "/usr/share/ikiwiki/templates",
	#underlaydir => "/usr/share/ikiwiki/basewiki",

	# Subversion stuff.
	#rcs => "svn",
	#historyurl => "http://svn.example.org/trunk/[[file]]",
	#diffurl => "http://svn.example.org/trunk/[[file]]?root=wiki&amp;r1=[[r1]]&amp;r2=[[r2]]",
	#svnrepo => "/svn/wiki",
	#svnpath => "trunk",

	# Git stuff.
	#rcs => "git",
	#historyurl => "http://git.example.org/gitweb.cgi?p=wiki.git;a=history;f=[[file]]",
	#diffurl => "http://git.example.org/gitweb.cgi?p=wiki.git;a=blobdiff;h=[[sha1_to]];hp=[[sha1_from]];hb=[[sha1_parent]];f=[[file]]",
	#gitorigin_branch => "origin",
	#gitmaster_branch => "master",

	# Tla stuff.
	#rcs => "tla"
	#historyurl => ??,
	#diffurl => ??,

	# Mercurial stuff.
	#rcs => "mercurial",
	#historyurl => "http://localhost:8000/", # hg serve'd local repository
	#diffurl => "http://localhost:8000/?fd=[[r2]];file=[[file]]",

	# Monotone stuff
	#rcs => "monotone",
	#mtnkey => "web\@machine.company.com",
	# Set if you want the wiki to sync on update and commit.
	#mtnsync => 0,
	# The path to your workspace (defaults to the srcdir itself)
	# e.g. use if your srcdir is a subdirectory of the workspace.
	#mtnrootdir => "path/to/root/of/workspace",
	# This is a monotone lua hook file used by ikiwiki for
	# inserting conflict markers. By default it will use
	# mtnrootdir/_MTN/mergerc. This hook will be populated with
	# default code the first time you use ikiwiki.  You can
	# change it to alter how conflict markers are inserted.
	#mtnmergerc => "path/to/mergerc",

	wrappers => [
		#{
		#	# The cgi wrapper.
		#	cgi => 1,
		#	wrapper => "/var/www/wiki/ikiwiki.cgi",
		#	wrappermode => "06755",
		#},
		#{
		#	# The svn post-commit wrapper.
		#	# Note that this will overwrite any existing
		#	# post-commit hook script, which may not be
		#	# what you want.
		#	wrapper => "/svn/wikirepo/hooks/post-commit",
		#	wrappermode => "04755",
		#	# Enable mail notifications of commits.
		#	notify => 1,
		#	# Log to syslog since svn post-commit hooks
		#	# hide output and errors.
		#	syslog => 1,
		#},
		#{
		#	# The git post-update wrapper.
		#	# Note that this will overwrite any existing
		#	# post-update hook script, which may not be
		#	# what you want.
		#	wrapper => "/git/wiki.git/hooks/post-update",
		#	wrappermode => "06755",
		#	# Enable mail notifications of commits.
		#	notify => 1,
		#},
	],

	# Generate rss feeds for blogs?
	rss => 0,
	# Generate atom feeds for blogs?
	atom => 0,
	# Urls to ping with XML-RPC when rss feeds are updated
	#pingurl => [qw{http://rpc.technorati.com/rpc/ping}],
	# Include discussion links on all pages?
	discussion => 0,
	# To exclude files matching a regexp from processing. This adds to
	# the default exclude list.
	exclude => ".*~\$",
	# To change the extension used for generated html files.
	#htmlext => 'htm',
	# Time format (for strftime)
	#timeformat => '%c',
	# Locale to use. Must be a UTF-8 locale.
	#locale => 'en_US.UTF-8',
	# Only send cookies over SSL connections.
	#sslcookie => 1,
	# Logging settings:
	#verbose => 1,
	syslog => 0,
	# To link to user pages in a subdirectory of the wiki.
	#userdir => "users",
	# To create output files named page.html rather than page/index.html.
	usedirs => 0,
	# Simple spam prevention: require an account-creation password.
	#account_creation_password => "example",

	# To add plugins, list them here.
	add_plugins => [qw{goodstuff sidebar}]
	# If you want to disable any of the default plugins, list them here.
	#disable_plugins => [qw{inline htmlscrubber passwordauth openid}],
	# To add a directory to the perl searh path, use this.
	#libdir => "/home/me/.ikiwiki/",

	# For use with the tag plugin, make all tags be located under a
	# base page.
	#tagbase => "tag",

	# For use with the search plugin if your estseek.cgi is located
	# somewhere else.
	#estseek => "/usr/lib/estraier/estseek.cgi",

	# For use with the openid plugin, to give an url to a page users
	# can use to signup for an OpenID.
	#openidsignup => "http://myopenid.com/",

	# For use with the mirrorlist plugin, a list of mirrors.
	#mirrorlist => {
	#	mirror1 => "http://hostname1",
	#	mirror2 => "http://hostname2/mirror",
	#},
}
